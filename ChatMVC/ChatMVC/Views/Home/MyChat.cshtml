@model ChatMVC.Models.ParticipantViewModel

<style>

    td {
        width: 300px;
        height: 50px;
        font-size: 16px;
        border-radius: 10px;
    }

    #me {
        text-align: right;
    }

    #footer {
        position: fixed;
        bottom: 10px;
        width: 100%;
        left: 30%;
    }

    #groups, #participants {
        display: inline-block;
        width: 33%;
        background-color: darkgrey;
    }

    #chat {
        display: inline-block;
        width: 33%;
    }
</style>


<div id="groups">
    <h1>GROUPS</h1>
    @foreach (var p in Model.groups)
    {
        <a href="~/Home/JoinChat/@p" class="btn btn-primary btn-lg active" role="button" aria-pressed="true">Join Chat Group</a>
    }
</div>
<div id="chat">



    <h1>CHAT</h1>
    <h2>Chat code is: @Model.code</h2>

    <div style="background-color: lightblue;"></div>

    <table style="border-collapse:separate; border-spacing:0 15px; " align="center" id="tbl">
    </table>

    @foreach (var m in Model.messages)
    {
        <script>createConversation('@m.Message','@m.Username')</script>
    }


    <div id="footer">

        <div>
            <table>
                <tr>
                    <td>
                        <input type="text" id="message" value=":smiley_cat:" />
                    </td>
                    <td>
                        <button type="button" id="sendmessage" class="btn btn-outline-success">Send</button>
                    </td>
                </tr>
            </table>
        </div>


        <input type="hidden" id="displayname" value="@Model.name" />

    </div>


</div>
<div id="participants">
    <h1>PARTICIPANTS</h1>
    <ul id="discussion"></ul>
</div>




@section scripts {

    <!--Script references. -->
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <!--EmojiOneArea -->
    <link href="~/Content/emojionearea.min.css" rel="stylesheet" />
    <script src="~/Scripts/emojionearea.js"></script>
    <script>

        $(document).ready(function () {



            $(function () {
                $(document).ready(function () {
                  $("#message").emojioneArea({
  	                pickerPosition: "top",
                 	filtersPosition: "bottom",
                    tonesStyle: "checkbox"
                    });
                });
            });

            // Reference the auto-generated proxy for the SignalR hub.
            var myhub = $.connection.myHub;

            myhub.client.addmessage = function (user,message) {
                // Add the message to the page.
                //$('#discussion').append('<li><strong>' + '<b>'+htmlEncode(name)+'</b>'
                //    + '</strong>: ' + htmlEncode(message) + '</li>');
                var tr = tbl.insertRow();
                  // Insert a cell in the row at index 0
                let newCell1 = tr.insertCell(0);
                let newCell2 = tr.insertCell(1);

                let newRightText = document.createTextNode(htmlEncode(message)+' said '+user);
                let newLeftText = document.createTextNode(user+' said '+htmlEncode(message) );


                if (user=='@Model.name') {
                    newCell2.id = "me";
                    newCell2.appendChild(newRightText);
                    newCell2.style.backgroundColor = "LightBlue";
                } else {
                    newCell1.id = "they";
                    newCell1.appendChild(newLeftText);
                    newCell1.style.backgroundColor = "LightGray";
                }
                // Append a text node to the cell

            };
            myhub.client.addchatmessage = function (message) {
                $('#discussion').append('<li style="font-style: italic;">' + htmlEncode(message) + '</li>');
            }
            // The callback function returning the connection id from the hub
            myhub.client.signalConnectionId = function (data, ) {
                signalConnectionId = data;
            }

            // Start the connection.
            $.connection.hub.start(function () {
                myhub.server.joinRoom('@Model.code');
            }).done(function () {
                // load event definitions here for sending to the hub
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    myhub.server.send('@Model.code', '@User.Identity.Name', $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();

                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

        function createConversation(message,user) {
                var tr = tbl.insertRow();
                  // Insert a cell in the row at index 0
                let newCell1 = tr.insertCell(0);
                let newCell2 = tr.insertCell(1);

                let newRightText = document.createTextNode(htmlEncode(message)+' said '+user);
                let newLeftText = document.createTextNode(user+' said '+htmlEncode(message) );


                if (user=='@Model.name') {
                    newCell2.id = "me";
                    newCell2.appendChild(newRightText);
                    newCell2.style.backgroundColor = "LightBlue";
                } else {
                    newCell1.id = "they";
                    newCell1.appendChild(newLeftText);
                    newCell1.style.backgroundColor = "LightGray";
                }
                // Append a text node to the cells
                }


    </script>
}
